{"meta":{"generator":"0.10.0","format":20,"date":1622976179156},"custom":null,"classes":[{"name":"Boat","description":"The main entry point for any instance of this bot.","construct":{"name":"Boat","description":"Creates a new boat.","params":[{"name":"options","description":"the options to run the bot with","type":[[["BoatOptions"]]]}]},"props":[{"name":"options","description":"The options used to launc this boat","type":[[["Object"]]],"meta":{"line":46,"file":"boat.js","path":"src"}},{"name":"client","description":"The discord.js API / Websocket client.","type":[[["discordjsClient"]]],"meta":{"line":53,"file":"boat.js","path":"src"}},{"name":"owners","description":"The owners of the bot","type":[[["Array","<"],["Snowflake",">"]]],"meta":{"line":59,"file":"boat.js","path":"src"}},{"name":"prefix","description":"The prefix used for standard message commands","type":[[["string"]]],"meta":{"line":65,"file":"boat.js","path":"src"}},{"name":"events","description":"The events that this client will handle","type":[[["Object"]]],"meta":{"line":71,"file":"boat.js","path":"src"}},{"name":"rafts","description":"The sub modules that this boat handles","type":[[["Object"]]],"meta":{"line":77,"file":"boat.js","path":"src"}},{"name":"commands","description":"The text based commands that can be called, mapped by name","type":[[["Collection","<"],["string",", "],["BaseCommand",">"]]],"meta":{"line":83,"file":"boat.js","path":"src"}},{"name":"interactions","description":"The interactions that can be called, mapped by name","type":[[["Object"]]],"meta":{"line":89,"file":"boat.js","path":"src"}},{"name":"token","description":"The token used to connect to discord","access":"private","type":[[["string"]]],"meta":{"line":100,"file":"boat.js","path":"src"}},{"name":"debug","description":"Whether the boat is in debug mode","type":[[["boolean"]]],"meta":{"line":106,"file":"boat.js","path":"src"}},{"name":"log","description":"Logging shortcut. Logs to `info` by default. Other levels are properties.","readonly":true,"type":[[["Logging"]]],"meta":{"line":215,"file":"boat.js","path":"src"}}],"methods":[{"name":"boot","description":"Connect the boat to discord and register events","async":true,"returns":[[["Promise"]]],"meta":{"line":115,"file":"boat.js","path":"src"}},{"name":"launchRaft","description":"Register a raft tpo this boat","access":"private","params":[{"name":"raft","description":"the raft to register","type":[[["BaseRaft"]]]},{"name":"name","description":"the name of the raft","type":[[["string"]]]}],"async":true,"meta":{"line":140,"file":"boat.js","path":"src"}},{"name":"initLog","description":"Launches the logging raft","meta":{"line":152,"file":"boat.js","path":"src"}},{"name":"setCommands","description":"Associate all commands from their rafts","access":"private","meta":{"line":164,"file":"boat.js","path":"src"}},{"name":"setInteractions","description":"Associate all interactions from their rafts","access":"private","meta":{"line":176,"file":"boat.js","path":"src"}},{"name":"attach","description":"Attach the event listeners to the socket.","access":"private","meta":{"line":190,"file":"boat.js","path":"src"}},{"name":"listen","description":"Listen for a socket event.","access":"private","params":[{"name":"event","description":"the name of the event to listen for","type":[[["string"]]]},{"name":"listener","description":"the function to call on event","type":[[["function"]]]}],"meta":{"line":204,"file":"boat.js","path":"src"}}],"meta":{"line":14,"file":"boat.js","path":"src"}},{"name":"BaseAPI","description":"Represents an api handler","abstract":true,"props":[{"name":"boat","description":"The boat that handles this commands raft","type":[[["boat"]]],"meta":{"line":13,"file":"BaseAPI.js","path":"src/rafts"}},{"name":"raft","description":"The raft that handles this command","type":[[["Raft"]]],"meta":{"line":20,"file":"BaseAPI.js","path":"src/rafts"}},{"name":"cache","description":"The cache for this api","type":[[["Collection","<"],["string",", "],["*",">"]]],"meta":{"line":31,"file":"BaseAPI.js","path":"src/rafts"}},{"name":"driver","description":"The driver that handles this API","type":[[["axios"]]],"meta":{"line":37,"file":"BaseAPI.js","path":"src/rafts"}},{"name":"api","description":"API request shortcut","readonly":true,"type":[[["Requester"]]],"meta":{"line":45,"file":"BaseAPI.js","path":"src/rafts"}}],"methods":[{"name":"_request","description":"API Request handler","access":"private","params":[{"name":"method","description":"The HTTP  method used to make this request","type":[[["HTTPMethod"]]]},{"name":"uri","description":"The uri of the desired endpoint","type":[[["string"]]]},{"name":"data","description":"The data to pass to the request","type":[[["Object"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":57,"file":"BaseAPI.js","path":"src/rafts"}}],"meta":{"line":11,"file":"BaseAPI.js","path":"src/rafts"}},{"name":"BaseCommand","description":"Represents a standard text command that can be run","abstract":true,"props":[{"name":"boat","description":"The boat that handles this commands raft","type":[[["boat"]]],"meta":{"line":9,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"raft","description":"The raft that handles this command","type":[[["Raft"]]],"meta":{"line":16,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"name","description":"The name of this command","type":[[["string"]]],"meta":{"line":23,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"enabled","description":"Whether this command is currently enabled","type":[[["boolean"]]],"meta":{"line":34,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"owner","description":"Whether this command is owners only","type":[[["boolean"]]],"meta":{"line":40,"file":"BaseCommand.js","path":"src/rafts"}}],"methods":[{"name":"run","description":"Runs the command","abstract":true,"params":[{"name":"message","description":"the message that executed the command","type":[[["Message"]]]},{"name":"args","description":"the content of the message split on spaces excluding the command name","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":49,"file":"BaseCommand.js","path":"src/rafts"}}],"meta":{"line":7,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"BaseInteraction","description":"Represents an interaction of any kind that can be run","abstract":true,"props":[{"name":"guild","description":"The guild, if any, that this interaction is specific too","nullable":true,"type":[[["Snowflake"]],[["Array","<"],["Snowflake",">"]]],"meta":{"line":19,"file":"BaseInteraction.js","path":"src/rafts"}},{"name":"definition","description":"The definition for this interaction that gets passed to discord to register / send it","type":[[["Object"]],[["function"]]],"meta":{"line":25,"file":"BaseInteraction.js","path":"src/rafts"}}],"meta":{"line":9,"file":"BaseInteraction.js","path":"src/rafts"}},{"name":"BaseRaft","description":"Represents a raft that handles one function","abstract":true,"props":[{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":12,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":23,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"commands","description":"The commands for this raft","nullable":true,"type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":29,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"apis","description":"The apis for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":35,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"interactions","description":"The interactions for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":41,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","abstract":true,"params":[{"name":"handlers","description":"The handlers for commands interactions, etc.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"handlers.commands","description":"The command handlers","optional":true,"type":[[["Object"]]]},{"name":"handlers.interactions","description":"The interaction handlers","optional":true,"type":[[["Obejct"]]]},{"name":"handlers.apis","description":"The API handlers","optional":true,"type":[[["Object"]]]}],"meta":{"line":52,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":10,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"CaptainsLog","description":"Logging raft for the boat.","extends":[[["BaseRaft"]]],"props":[{"name":"driver","description":"The log driver.","access":"private","type":[[["Winston"]]],"meta":{"line":22,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"webhook","description":"The webhook client that handles sending error logs to discord\nOnly available after launching","access":"private","type":[[["WebhookClient"]]],"meta":{"line":55,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":12,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":23,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"commands","description":"The commands for this raft","nullable":true,"type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":29,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"apis","description":"The apis for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":35,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"interactions","description":"The interactions for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":41,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"out","description":"Write a message to the log.","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","optional":true,"default":"No message specified","type":[[["string"]]]},{"name":"error","description":"the full error object to use for a stacktrace","optional":true,"type":[[["Error"]]]}],"async":true,"meta":{"line":65,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"fatal","description":"Exit the process after writing a message to the log.","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","optional":true,"type":[[["string"]]]},{"name":"error","description":"the full error object to use for a stacktrace","optional":true,"type":[[["Error"]]]}],"async":true,"meta":{"line":88,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"logDiscord","description":"Send a log message via webhook.","access":"private","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"path","description":"the path to the module that this occured in","type":[[["string"]]]},{"name":"message","description":"the message to send","type":[[["string"]]]},{"name":"error","description":"the full error object to use for a stacktrace","optional":true,"type":[[["Error"]]]}],"returns":[[["Promise","<"],["Message",">"]]],"meta":{"line":103,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"path","description":"Calculate the path of the given source module.","access":"private","params":[{"name":"source","description":"the module that made this log","type":[[["Module"]]]}],"returns":[[["string"]]],"meta":{"line":156,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"params":[{"name":"handlers","description":"The handlers for commands interactions, etc.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"handlers.commands","description":"The command handlers","optional":true,"type":[[["Object"]]]},{"name":"handlers.interactions","description":"The interaction handlers","optional":true,"type":[[["Obejct"]]]},{"name":"handlers.apis","description":"The API handlers","optional":true,"type":[[["Object"]]]}],"meta":{"line":52,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":13,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"Logging","description":"Not a real class, a proxy for the {@link LogManager} levels","props":[{"name":"[level]","description":"The level of log to make, one of {@link LogLevel}","readonly":true,"type":[[["Logging"]]],"meta":{"line":13,"file":"LogRouter.js","path":"src/rafts/captainsLog"}}],"methods":[{"name":"*","description":"Calls the logger at the previously specified level, if none was specified, this is `info`","params":[{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","type":[[["string"]]]}],"meta":{"line":21,"file":"LogRouter.js","path":"src/rafts/captainsLog"}}],"meta":{"line":7,"file":"LogRouter.js","path":"src/rafts/captainsLog"}},{"name":"DogAPI","description":"Methods for interacting with the dog api","methods":[{"name":"getRandom","description":"Gets a random image of a pupper","params":[{"name":"breed","description":"The breed to get a random image of","optional":true,"type":[[["string"]]]},{"name":"subbreed","description":"The subbreed to get a random image of","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":22,"file":"dog.js","path":"src/rafts/lighthouse/apis"}},{"name":"getBreeds","description":"Get a list of all available breeds","async":true,"returns":[[["Promise","<"],["Array","<"],["string",">>"]]],"meta":{"line":36,"file":"dog.js","path":"src/rafts/lighthouse/apis"}}],"meta":{"line":8,"file":"dog.js","path":"src/rafts/lighthouse/apis"}},{"name":"NasaAPI","description":"Methods for interacting with the nasa api","props":[{"name":"cache","description":"The cache for any data this api accesses","type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":25,"file":"nasa.js","path":"src/rafts/lighthouse/apis"}}],"methods":[{"name":"getAPOD","description":"Get the APOD data for the day","params":[{"name":"force","description":"Whether to skip the cache check","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":33,"file":"nasa.js","path":"src/rafts/lighthouse/apis"}}],"meta":{"line":11,"file":"nasa.js","path":"src/rafts/lighthouse/apis"}},{"name":"Lighthouse","description":"Image commands raft for this boat.","extends":[[["BaseRaft"]]],"props":[{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":12,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":23,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"commands","description":"The commands for this raft","nullable":true,"type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":29,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"apis","description":"The apis for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":35,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"interactions","description":"The interactions for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":41,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"params":[{"name":"handlers","description":"The handlers for commands interactions, etc.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"handlers.commands","description":"The command handlers","optional":true,"type":[[["Object"]]]},{"name":"handlers.interactions","description":"The interaction handlers","optional":true,"type":[[["Obejct"]]]},{"name":"handlers.apis","description":"The API handlers","optional":true,"type":[[["Object"]]]}],"meta":{"line":52,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":12,"file":"index.js","path":"src/rafts/lighthouse"}},{"name":"PortAuthority","description":"The management raft for this boat.","extends":[[["BaseRaft"]]],"props":[{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":12,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":23,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"commands","description":"The commands for this raft","nullable":true,"type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":29,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"apis","description":"The apis for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":35,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"interactions","description":"The interactions for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":41,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"params":[{"name":"handlers","description":"The handlers for commands interactions, etc.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"handlers.commands","description":"The command handlers","optional":true,"type":[[["Object"]]]},{"name":"handlers.interactions","description":"The interaction handlers","optional":true,"type":[[["Obejct"]]]},{"name":"handlers.apis","description":"The API handlers","optional":true,"type":[[["Object"]]]}],"meta":{"line":52,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":11,"file":"index.js","path":"src/rafts/portAuthority"}},{"name":"SeaShanties","description":"Misc. commands raft for this boat.","extends":[[["BaseRaft"]]],"props":[{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":12,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":23,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"commands","description":"The commands for this raft","nullable":true,"type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":29,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"apis","description":"The apis for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":35,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"interactions","description":"The interactions for this raft","nullable":true,"type":[[["Object"]]],"meta":{"line":41,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"params":[{"name":"handlers","description":"The handlers for commands interactions, etc.","optional":true,"default":"{}","type":[[["Object"]]]},{"name":"handlers.commands","description":"The command handlers","optional":true,"type":[[["Object"]]]},{"name":"handlers.interactions","description":"The interaction handlers","optional":true,"type":[[["Obejct"]]]},{"name":"handlers.apis","description":"The API handlers","optional":true,"type":[[["Object"]]]}],"meta":{"line":52,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":10,"file":"index.js","path":"src/rafts/seaShanties"}},{"name":"Requester","description":"Not a real class, a proxy for api routes.","props":[{"name":"[param]","description":"A part of the url path, ending with one of {@link HTTPMethod}","readonly":true,"type":[[["Requester"]],[["function"]]],"meta":{"line":23,"file":"APIRouter.js","path":"src/util"}}],"methods":[{"name":"HTTPMethod","description":"The method to use in the fetch request, see {@link HTTPMethod}","params":[{"name":"data","description":"the data to pass to the request","type":[[["RequestData"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":40,"file":"APIRouter.js","path":"src/util"}},{"name":"*","description":"A variable part of the url path","params":[{"name":"routeKey","description":"the key to add to the url, any number of these is accepted","type":[[["string"]]]}],"meta":{"line":47,"file":"APIRouter.js","path":"src/util"}}],"meta":{"line":17,"file":"APIRouter.js","path":"src/util"}},{"name":"Util","description":"Houses utility functions for the entire application.","methods":[{"name":"objForEach","description":"Iterate over a standard javascript object","scope":"static","params":[{"name":"obj","description":"the object to iterate over","type":[[["Object"]]]},{"name":"func","description":"the function to call with each element, takes parameters (value, key, object)","type":[[["function"]]]}],"returns":[[["Promise"]]],"meta":{"line":17,"file":"index.js","path":"src/util"}},{"name":"nonBlockLoop","description":"Executes a function the specified number of times without blocking the event loop","scope":"static","params":[{"name":"iterations","description":"the numebr of times to loop","type":[[["number"]]]},{"name":"func","description":"the function to execute each loop, takes parameters (currentIteration, args)","type":[[["function"]]]},{"name":"args","description":"args to pass to the function if required, if the function returns a value, args is set to that value after each run.","type":[[["Object"]]]},{"name":"args.break","description":"when set true, the for loop will break and resolve the promise with the rest of the returned object","type":[[["boolean"]]]}],"async":true,"returns":[[["Promise","<"],["*",">"]]],"meta":{"line":44,"file":"index.js","path":"src/util"}}],"meta":{"line":6,"file":"index.js","path":"src/util"}}],"interfaces":[],"typedefs":[{"name":"LogOptions","description":"The logging options","type":[[["Object"]]],"props":[{"name":"maxLevel","description":"the maximum level of logging to allow in the output file","optional":true,"default":"error","type":[[["LogLevel"]]]},{"name":"outputFile","description":"the location of the output file, either relative or direct path","type":[[["string"]]]},{"name":"verbose","description":"whether to log verbose to the console","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"webhookToken","description":"the token for the logging webhook (LOG_WEBHOOK_TOKEN in env if not provided)","type":[[["string"]]]}],"meta":{"line":15,"file":"boat.js","path":"src"}},{"name":"BoatOptions","description":"Options for creating a boat","type":[[["Object"]]],"props":[{"name":"debug","description":"whether this boat is in debug mode","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"token","description":"the token to use for login","type":[[["string"]]]},{"name":"clientOpts","description":"the options to pass to djs","optional":true,"type":[[["ClientOptions"]]]},{"name":"owners","description":"the owners of the bot","optional":true,"type":[[["Array","<"],["Snowflake",">"]]]},{"name":"commandPrefix","description":"the prefix used for standard message commands","optional":true,"default":"!","type":[[["string"]]]},{"name":"log","description":"the webhook token for logging errors to discord","type":[[["LogOptions"]]]}],"meta":{"line":24,"file":"boat.js","path":"src"}},{"name":"HTTPMethod","description":"An HTTP fetch method, one of:\n* get\n* patch\n* post\n* put\n* delete","type":[[["string"]]],"meta":{"line":7,"file":"APIRouter.js","path":"src/util"}},{"name":"RequestData","description":"Data passed to any request","type":[[["Object"]]],"params":[{"name":"params","description":"parameters to put in the url","optional":true,"type":[[["Object"]]]},{"name":"data","description":"for put, post, delete, and patch, the data to pass","optional":true,"type":[[["Object"]]]},{"name":"responseType","description":"the expected response type","optional":true,"default":"json","type":[[["string"]]]},{"name":"headers","description":"the headers to send with the response CAUTION: this *can* overide default headers","optional":true,"type":[[["Object"]]]}],"meta":{"line":31,"file":"APIRouter.js","path":"src/util"}}],"externals":[]}