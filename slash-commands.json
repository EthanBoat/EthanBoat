{"meta":{"generator":"0.9.0","format":20,"date":1617495750274},"custom":null,"classes":[{"name":"Boat","description":"The main entry point for any instance of this bot.","construct":{"name":"Boat","description":"Creates a new boat.","params":[{"name":"options","description":"the options to run the bot with","type":[[["BoatOptions"]]]}]},"props":[{"name":"options","description":"The options used to launc this boat","type":[[["Object"]]],"meta":{"line":47,"file":"boat.js","path":"src"}},{"name":"client","description":"The discord.js API / Websocket client.","type":[[["discordjsClient"]]],"meta":{"line":54,"file":"boat.js","path":"src"}},{"name":"owners","description":"The owners of the bot","type":[[["Array","<"],["Snowflake",">"]]],"meta":{"line":60,"file":"boat.js","path":"src"}},{"name":"prefix","description":"The prefix used for standard message commands","type":[[["string"]]],"meta":{"line":66,"file":"boat.js","path":"src"}},{"name":"events","description":"The events that this client will handle","type":[[["Object"]]],"meta":{"line":72,"file":"boat.js","path":"src"}},{"name":"rafts","description":"The sub modules that this boat handles","type":[[["Object"]]],"meta":{"line":78,"file":"boat.js","path":"src"}},{"name":"commands","description":"The text based commands that can be called, mapped by name","type":[[["Collection","<"],["string",", "],["BaseCommand",">"]]],"meta":{"line":84,"file":"boat.js","path":"src"}},{"name":"interactions","description":"The interactions that can be called, mapped by name","type":[[["Object"]]],"meta":{"line":90,"file":"boat.js","path":"src"}},{"name":"token","description":"The token used to connect to discord","access":"private","type":[[["string"]]],"meta":{"line":99,"file":"boat.js","path":"src"}},{"name":"debug","description":"Whether the boat is in debug mode","type":[[["boolean"]]],"meta":{"line":105,"file":"boat.js","path":"src"}},{"name":"log","description":"Logging shortcut. Logs to `info` by default. Other levels are properties.","readonly":true,"type":[[["Logging"]]],"meta":{"line":260,"file":"boat.js","path":"src"}}],"methods":[{"name":"boot","description":"Connect the boat to discord and register events","async":true,"returns":[[["Promise"]]],"meta":{"line":114,"file":"boat.js","path":"src"}},{"name":"launchRaft","description":"Register a raft tpo this boat","access":"private","params":[{"name":"raft","description":"the raft to register","type":[[["BaseRaft"]]]},{"name":"name","description":"the name of the raft","type":[[["string"]]]}],"async":true,"meta":{"line":149,"file":"boat.js","path":"src"}},{"name":"initLog","description":"Launches the logging raft","meta":{"line":161,"file":"boat.js","path":"src"}},{"name":"setCommands","description":"Associate all commands from their rafts","access":"private","meta":{"line":173,"file":"boat.js","path":"src"}},{"name":"setInteractions","description":"Associate all interactions from their rafts","access":"private","meta":{"line":185,"file":"boat.js","path":"src"}},{"name":"registerInteraction","description":"Register an interaction","params":[{"name":"type","description":"the type of the command that is being registered","type":[[["number"]]]},{"name":"name","description":"the name of the command to register","type":[[["string"]]]}],"async":true,"returns":[["*"]],"meta":{"line":202,"file":"boat.js","path":"src"}},{"name":"attach","description":"Attach the event listeners to the socket.","access":"private","meta":{"line":235,"file":"boat.js","path":"src"}},{"name":"listen","description":"Listen for a socket event.","access":"private","params":[{"name":"event","description":"the name of the event to listen for","type":[[["string"]]]},{"name":"listener","description":"the function to call on event","type":[[["function"]]]}],"meta":{"line":249,"file":"boat.js","path":"src"}}],"meta":{"line":15,"file":"boat.js","path":"src"}},{"name":"CommandInteraction","description":"Represents a command interaction, see {@link InteractionClient}.","extends":[[["Interaction"]]],"props":[{"name":"id","description":"The ID of this interaction.","readonly":true,"type":[[["Snowflake"]]],"meta":{"line":24,"file":"CommandInteraction.js","path":"src"}},{"name":"token","description":"The token of this interaction.","readonly":true,"type":[[["string"]]],"meta":{"line":33,"file":"CommandInteraction.js","path":"src"}},{"name":"commandID","description":"The ID of the invoked command.","readonly":true,"type":[[["Snowflake"]]],"meta":{"line":40,"file":"CommandInteraction.js","path":"src"}},{"name":"commandName","description":"The name of the invoked command.","readonly":true,"type":[[["string"]]],"meta":{"line":47,"file":"CommandInteraction.js","path":"src"}},{"name":"options","description":"The options passed to the command.","readonly":true,"type":[[["Object"]]],"meta":{"line":54,"file":"CommandInteraction.js","path":"src"}},{"name":"channel","description":"The channel this interaction was sent in.","readonly":true,"nullable":true,"type":[[["Channel"]]],"meta":{"line":61,"file":"CommandInteraction.js","path":"src"}},{"name":"user","description":"If this interaction was sent in a DM, the user which sent it.","readonly":true,"nullable":true,"type":[[["User"]]],"meta":{"line":68,"file":"CommandInteraction.js","path":"src"}},{"name":"guild","description":"The guild this interaction was sent in, if any.","readonly":true,"nullable":true,"type":[[["Guild"]]],"meta":{"line":75,"file":"CommandInteraction.js","path":"src"}},{"name":"member","description":"If this interaction was sent in a guild, the member which sent it.","readonly":true,"nullable":true,"type":[[["GuildMember"]]],"meta":{"line":82,"file":"CommandInteraction.js","path":"src"}},{"name":"webhook","description":"An associated webhook client, can be used to create deferred replies","type":[[["WebhookClient"]]],"meta":{"line":88,"file":"CommandInteraction.js","path":"src"}},{"name":"createdTimestamp","description":"The timestamp the interaction was created at.","readonly":true,"type":[[["number"]]],"meta":{"line":96,"file":"CommandInteraction.js","path":"src"}},{"name":"createdAt","description":"The time the interaction was created at.","readonly":true,"type":[[["Date"]]],"meta":{"line":105,"file":"CommandInteraction.js","path":"src"}}],"methods":[{"name":"defer","description":"Acknowledge this interaction without content.","params":[{"name":"options","description":"Options","optional":true,"type":[[["Object"]]]}],"async":true,"meta":{"line":113,"file":"CommandInteraction.js","path":"src"}},{"name":"reply","description":"Reply to this interaction.","params":[{"name":"content","description":"The content for the message.","nullable":true,"type":[[["StringResolvable"]],[["APIMessage"]]]},{"name":"options","description":"The options to provide.","nullable":true,"type":[[["MessageOptions"]],[["MessageAdditions"]]]}],"async":true,"meta":{"line":122,"file":"CommandInteraction.js","path":"src"}}],"meta":{"line":10,"file":"CommandInteraction.js","path":"src"}},{"name":"Interaction","description":"Represents an interaction, see {@link InteractionClient}.","extends":[[["Base"]]],"meta":{"line":9,"file":"Interaction.js","path":"src"}},{"name":"BaseCommand","description":"Represents a standard text command that can be run","abstract":true,"props":[{"name":"boat","description":"The boat that handles this commands raft","type":[[["boat"]]],"meta":{"line":9,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"raft","description":"The raft that handles this command","type":[[["Raft"]]],"meta":{"line":16,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"name","description":"The name of this command","type":[[["string"]]],"meta":{"line":23,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"enabled","description":"Whether this command is currently enabled","type":[[["boolean"]]],"meta":{"line":34,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"owner","description":"Whether this command is owners only","type":[[["boolean"]]],"meta":{"line":40,"file":"BaseCommand.js","path":"src/rafts"}}],"methods":[{"name":"run","description":"Runs the command","abstract":true,"params":[{"name":"message","description":"the message that executed the command","type":[[["Message"]]]},{"name":"args","description":"the content of the message split on spaces excluding the command name","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":49,"file":"BaseCommand.js","path":"src/rafts"}}],"meta":{"line":7,"file":"BaseCommand.js","path":"src/rafts"}},{"name":"BaseRaft","description":"Represents a raft that handles one function","abstract":true,"props":[{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":9,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":20,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","abstract":true,"meta":{"line":27,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":7,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"CaptainsLog","description":"Logging raft for the boat.","extends":[[["BaseRaft"]]],"props":[{"name":"driver","description":"The log driver.","access":"private","type":[[["Winston"]]],"meta":{"line":50,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"webhook","description":"The webhook client that handles sending error logs to discord\nOnly available after launching","access":"private","type":[[["WebhookClient"]]],"meta":{"line":83,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":9,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":20,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"out","description":"Write a message to the log.","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","type":[[["string"]]]}],"async":true,"meta":{"line":92,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"fatal","description":"Exit the process after writing a message to the log.","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","type":[[["string"]]]}],"async":true,"meta":{"line":106,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"logDiscord","description":"Send a log message via webhook.","access":"private","params":[{"name":"level","description":"the log level","type":[[["LogLevel"]]]},{"name":"path","description":"the path to the module that this occured in","type":[[["string"]]]},{"name":"message","description":"the message to send","type":[[["string"]]]}],"returns":[[["Promise","<"],["axiosRequest",", "],["axiosResponse",">"]]],"meta":{"line":120,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"path","description":"Calculate the path of the given source module.","access":"private","params":[{"name":"source","description":"the module that made this log","type":[[["Module"]]]}],"returns":[[["string"]]],"meta":{"line":155,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"meta":{"line":27,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":41,"file":"index.js","path":"src/rafts/captainsLog"}},{"name":"Logging","description":"Not a real class, a proxy for the {@link LogManager} levels","props":[{"name":"[level]","description":"The level of log to make, one of {@link LogLevel}","readonly":true,"type":[[["Logging"]]],"meta":{"line":13,"file":"LogRouter.js","path":"src/rafts/captainsLog"}}],"methods":[{"name":"*","description":"Calls the logger at the previously specified level, if none was specified, this is `info`","params":[{"name":"source","description":"the module sourcing this log","type":[[["Module"]]]},{"name":"message","description":"the message to output","type":[[["string"]]]}],"meta":{"line":21,"file":"LogRouter.js","path":"src/rafts/captainsLog"}}],"meta":{"line":7,"file":"LogRouter.js","path":"src/rafts/captainsLog"}},{"name":"PortAuthority","description":"The management raft for this boat.","extends":[[["BaseRaft"]]],"props":[{"name":"commands","description":"The commands for this raft","type":[[["Collection","<"],["string",", "],["Object",">"]]],"meta":{"line":20,"file":"index.js","path":"src/rafts/portAuthority"}},{"name":"interactions","description":"The interactions for this raft","type":[[["Object"]]],"meta":{"line":26,"file":"index.js","path":"src/rafts/portAuthority"}},{"name":"boat","description":"The boat that handles this raft","type":[[["Boat"]]],"meta":{"line":9,"file":"BaseRaft.js","path":"src/rafts"}},{"name":"active","description":"Whether this raft is currently active","type":[[["boolean"]]],"meta":{"line":20,"file":"BaseRaft.js","path":"src/rafts"}}],"methods":[{"name":"launch","description":"Initiates this raft","inherits":"BaseRaft#launch","inherited":true,"abstract":false,"meta":{"line":27,"file":"BaseRaft.js","path":"src/rafts"}}],"meta":{"line":13,"file":"index.js","path":"src/rafts/portAuthority"}}],"interfaces":[],"typedefs":[{"name":"LogOptions","description":"The logging options","type":[[["Object"]]],"props":[{"name":"maxLevel","description":"the maximum level of logging to allow in the output file","optional":true,"default":"error","type":[[["LogLevel"]]]},{"name":"outputFile","description":"the location of the output file, either relative or direct path","type":[[["string"]]]},{"name":"verbose","description":"whether to log verbose to the console","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"webhookToken","description":"the token for the logging webhook (LOG_WEBHOOK_TOKEN in env if not provided)","type":[[["string"]]]}],"meta":{"line":16,"file":"boat.js","path":"src"}},{"name":"BoatOptions","description":"Options for creating a boat","type":[[["Object"]]],"props":[{"name":"debug","description":"whether this boat is in debug mode","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"token","description":"the token to use for login","type":[[["string"]]]},{"name":"clientOpts","description":"the options to pass to djs","optional":true,"type":[[["ClientOptions"]]]},{"name":"owners","description":"the owners of the bot","optional":true,"type":[[["Array","<"],["Snowflake",">"]]]},{"name":"commandPrefix","description":"the prefix used for standard message commands","optional":true,"default":"!","type":[[["string"]]]},{"name":"log","description":"the webhook token for logging errors to discord","type":[[["LogOptions"]]]}],"meta":{"line":25,"file":"boat.js","path":"src"}}],"externals":[]}